/******************************************************************************
 * Copyright (c) ETSI 2020.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Elemer Lelik
 *
 /*****************************************************************
 ** @author  STF 572
 ** @version 0.0.1
 ** @purpose 5.1.1.3, Ensure that If an internal class defines an external function, it shall be derived from an external class either directly or indirectly. 
 ** @verdict pass accept
*****************************************************************/
module Sem_5010103_externalClasses_002 "TTCN-3:2018 Object-Oriented" {
    
    type component GeneralComp {
    }

    type external class /*Java_*/Int2_List {
        function add(integer v);
        function get(integer index) return integer;
    }

    type class t_internal_class extends /*Java_*/Int2_List {
        external function add(integer v);
    }

    testcase TC_Sem_5010103_externalClasses_002() runs on GeneralComp {
        //empty testcase
        setverdict(pass);
    }

    control {
        execute(TC_Sem_5010103_externalClasses_002());
    }
}
